diff --git a/node_modules/react-native-chart-kit/dist/line-chart/LineChart.js b/node_modules/react-native-chart-kit/dist/line-chart/LineChart.js
index 1ac4227..1be123f 100644
--- a/node_modules/react-native-chart-kit/dist/line-chart/LineChart.js
+++ b/node_modules/react-native-chart-kit/dist/line-chart/LineChart.js
@@ -230,11 +230,11 @@ var LineChart = /** @class */ (function (_super) {
             return output;
         };
         _this.renderShadow = function (_a) {
-            var width = _a.width, height = _a.height, paddingRight = _a.paddingRight, paddingTop = _a.paddingTop, data = _a.data, useColorFromDataset = _a.useColorFromDataset;
+            var width = _a.width, height = _a.height, paddingRight = _a.withVerticalLabels ? _a.paddingRight : 0, paddingTop = _a.paddingTop, data = _a.data, useColorFromDataset = _a.useColorFromDataset;
             if (_this.props.bezier) {
                 return _this.renderBezierShadow({
                     width: width,
-                    height: height,
+                    height: height +100,
                     paddingRight: paddingRight,
                     paddingTop: paddingTop,
                     data: data,
@@ -260,7 +260,7 @@ var LineChart = /** @class */ (function (_super) {
             });
         };
         _this.renderLine = function (_a) {
-            var width = _a.width, height = _a.height, paddingRight = _a.paddingRight, paddingTop = _a.paddingTop, data = _a.data, linejoinType = _a.linejoinType;
+            var width = _a.width, height = _a.height, paddingRight = _a.withVerticalLabels ? _a.paddingRight : 0, paddingTop = _a.paddingTop, data = _a.data, linejoinType = _a.linejoinType;
             if (_this.props.bezier) {
                 return _this.renderBezierLine({
                     data: data,
@@ -378,8 +378,8 @@ var LineChart = /** @class */ (function (_super) {
         }
         var legendOffset = this.props.data.legend ? height * 0.15 : 0;
         return (<View style={style}>
-        <Svg height={height + paddingBottom + legendOffset} width={width - margin * 2 - marginRight}>
-          <Rect width="100%" height={height + legendOffset} rx={borderRadius} ry={borderRadius} fill="url(#backgroundGradient)" fillOpacity={transparent ? 0 : 1}/>
+        <Svg height={height + paddingBottom + legendOffset - 20} width={width - margin * 2 - marginRight}>
+          <Rect width="100%" height={height + legendOffset - 20} rx={borderRadius} ry={borderRadius} fill="url(#backgroundGradient)" fillOpacity={transparent ? 0 : 1}/>
           {this.props.data.legend &&
             this.renderLegend(config.width, legendOffset)}
           <G x="0" y={legendOffset}>
